{"version":3,"sources":["components/postList.jsx","components/postForm.jsx","app.jsx","index.js"],"names":["PostList","handleDelete","props","onDelete","post","this","title","content","date","className","onClick","Component","PostForm","titleRef","React","createRef","contentRef","today","Date","year","getFullYear","month","getMonth","getDate","hours","getHours","minutes","getMinutes","uploadDate","handleUpload","current","value","onUpload","onSubmit","event","preventDefault","action","method","ref","type","id","placeholder","name","cols","rows","App","state","now","setState","posting","filter","posts","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAyBeA,E,4MAtBbC,aAAe,WACb,EAAKC,MAAMC,SAAS,EAAKD,MAAME,O,4CAEjC,WAAU,IAAD,EAC0BC,KAAKH,MAAME,KAApCE,EADD,EACCA,MAAOC,EADR,EACQA,QAASC,EADjB,EACiBA,KACxB,OACE,qBAAIC,UAAU,OAAd,UACE,mCACE,oBAAIA,UAAU,kBAAd,SAAiCH,IACjC,wBAAQG,UAAU,iBAAiBC,QAASL,KAAKJ,aAAjD,kBAIF,oCACE,sBAAMQ,UAAU,oBAAhB,SAAqCF,IACrC,sBAAME,UAAU,iBAAhB,SAAkCD,c,GAhBrBG,aC6DRC,E,4MA5DbC,SAAWC,IAAMC,Y,EACjBC,WAAaF,IAAMC,Y,EAEnBE,MAAQ,IAAIC,K,EACZC,KAAO,EAAKF,MAAMG,c,EAClBC,MAAQ,EAAKJ,MAAMK,W,EACnBd,KAAO,EAAKS,MAAMM,U,EAClBC,MAAQ,EAAKP,MAAMQ,W,EACnBC,QAAU,EAAKT,MAAMU,a,EAErBC,W,UAAgB,EAAKT,K,aAAS,EAAKE,MAAQ,E,aAAM,EAAKb,K,aACpD,EAAKgB,MAAQ,GAAK,EAAKA,MAAQ,EAAKA,MAAQ,G,YAC1C,EAAKE,Q,YAAW,EAAKF,MAAQ,GAAK,KAAO,M,EAE7CK,aAAe,WACb,IAAIvB,EAAQ,EAAKO,SAASiB,QAAQC,MAC9BxB,EAAU,EAAKS,WAAWc,QAAQC,MACtC,EAAK7B,MAAM8B,SAAS1B,EAAOC,EAAS,EAAKqB,a,EAG3CK,SAAW,SAACC,GACVA,EAAMC,kB,4CAGR,WACE,OACE,uBACEC,OAAO,IACPC,OAAO,OACP5B,UAAU,YACVwB,SAAU5B,KAAK4B,SAJjB,UAME,uBACEK,IAAKjC,KAAKQ,SACV0B,KAAK,OACLC,GAAG,aACHC,YAAY,iBAEd,0BACEH,IAAKjC,KAAKW,WACV0B,KAAK,GACLF,GAAG,gBACHG,KAAK,KACLC,KAAK,KACLnC,UAAU,WACVgC,YAAY,iBAGd,wBACEF,KAAK,SACL9B,UAAU,aACVC,QAASL,KAAKwB,aAHhB,uC,GAjDelB,aCuCRkC,E,4MAlCbC,MAAQ,CACN1C,KAAM,CACJ,CACEoC,GAAI,EACJlC,MAAO,oDACPC,QAAS,GACTC,KAAM,0B,EAKZqB,aAAe,SAACvB,EAAOC,EAASC,GAC9B,IAAMJ,EAAI,sBAAO,EAAK0C,MAAM1C,MAAlB,CAAwB,CAAEoC,GAAItB,KAAK6B,MAAOzC,QAAOC,UAASC,UACpE,EAAKwC,SAAS,CAAE5C,U,EAGlBH,aAAe,SAACgD,GACd,IAAM7C,EAAO,EAAK0C,MAAM1C,KAAK8C,QAAO,SAACC,GAAD,OAAWA,EAAMX,KAAOS,EAAQT,MACpE,EAAKQ,SAAS,CAAE5C,U,4CAElB,WAAU,IAAD,OACP,OACE,qCACE,cAAC,EAAD,CAAU4B,SAAU3B,KAAKwB,eACzB,oBAAIpB,UAAU,YAAd,SACGJ,KAAKyC,MAAM1C,KAAKgD,KAAI,SAAChD,GAAD,OACnB,cAAC,EAAD,CAAwBA,KAAMA,EAAMD,SAAU,EAAKF,cAApCG,EAAKoC,gB,GA3Bd7B,aCDlB0C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ed32be2e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass PostList extends Component {\n  handleDelete = () => {\n    this.props.onDelete(this.props.post);\n  };\n  render() {\n    const { title, content, date } = this.props.post;\n    return (\n      <li className=\"post\">\n        <header>\n          <h2 className=\"post-list-title\">{title}</h2>\n          <button className=\"post-close-btn\" onClick={this.handleDelete}>\n            X\n          </button>\n        </header>\n        <section>\n          <span className=\"post-list-content\">{content}</span>\n          <span className=\"post-list-date\">{date}</span>\n        </section>\n      </li>\n    );\n  }\n}\n\nexport default PostList;\n","import React, { Component } from 'react';\n\nclass PostForm extends Component {\n  titleRef = React.createRef();\n  contentRef = React.createRef();\n\n  today = new Date();\n  year = this.today.getFullYear();\n  month = this.today.getMonth();\n  date = this.today.getDate();\n  hours = this.today.getHours();\n  minutes = this.today.getMinutes();\n\n  uploadDate = `${this.year}. ${this.month + 1}. ${this.date}. ${\n    this.hours < 12 ? this.hours : this.hours - 12\n  }:${this.minutes} ${this.hours < 12 ? 'AM' : 'PM'}`;\n\n  handleUpload = () => {\n    let title = this.titleRef.current.value;\n    let content = this.contentRef.current.value;\n    this.props.onUpload(title, content, this.uploadDate);\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  render() {\n    return (\n      <form\n        action=\"#\"\n        method=\"POST\"\n        className=\"post-form\"\n        onSubmit={this.onSubmit}\n      >\n        <input\n          ref={this.titleRef}\n          type=\"text\"\n          id=\"form-title\"\n          placeholder=\"제목\"\n        />\n        <textarea\n          ref={this.contentRef}\n          name=\"\"\n          id=\"form-contents\"\n          cols=\"30\"\n          rows=\"10\"\n          className=\"contents\"\n          placeholder=\"내용\"\n        ></textarea>\n\n        <button\n          type=\"submit\"\n          className=\"submit-btn\"\n          onClick={this.handleUpload}\n        >\n          올리기\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default PostForm;\n","import './app.css';\n\nimport React, { Component } from 'react';\nimport PostList from './components/postList';\nimport PostForm from './components/postForm';\n\nclass App extends Component {\n  state = {\n    post: [\n      {\n        id: 1,\n        title: '메모를 입력하세요',\n        content: '',\n        date: '2021. 8. 23. 10:00PM',\n      },\n    ],\n  };\n\n  handleUpload = (title, content, date) => {\n    const post = [...this.state.post, { id: Date.now(), title, content, date }];\n    this.setState({ post });\n  };\n\n  handleDelete = (posting) => {\n    const post = this.state.post.filter((posts) => posts.id !== posting.id);\n    this.setState({ post });\n  };\n  render() {\n    return (\n      <>\n        <PostForm onUpload={this.handleUpload} />\n        <ul className=\"post-list\">\n          {this.state.post.map((post) => (\n            <PostList key={post.id} post={post} onDelete={this.handleDelete} />\n          ))}\n        </ul>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}